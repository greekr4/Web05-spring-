<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mpper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.myshop.OrderMapper">

 
	<!-- 오더리스트 -->
	<select id="OrderList" resultType="com.myshop.dto.OrderDTO">
		select a.*,b.name as 'payment_val',c.name as 'order_val' from order_master a
		inner join codemaster b
		on (a.payment_status = b.value and b.code='omps')
		inner join codemaster c 
		on (a.order_step = c.value and c.code='omos')
		order by a.seq desc 
	</select>
	
	<!-- 오더리스트_회원 -->
	<select id="OrderList_cus" resultType="com.myshop.dto.OrderDTO">
		select a.*,b.name as 'payment_val',c.name as 'order_val' from order_master a
		inner join codemaster b
		on (a.payment_status = b.value and b.code='omps')
		inner join codemaster c 
		on (a.order_step = c.value and c.code='omos')
		where cus_seq = #{cus_seq}
		order by seq desc
	</select>
	
	<!-- 오더리스트 입금확인 -->
	<select id="OrderList_PayOk" resultType="com.myshop.dto.OrderDTO">
		select * from order_master where payment_status = 3 and order_step != 5 order by seq desc
	</select>
	
	<!-- 오더리스트 처리완료 -->
	<select id="OrderList_Ok" resultType="com.myshop.dto.OrderDTO">
		select * from order_master where payment_status = 3 and order_step = 5 order by seq desc
	</select>

	<!-- 오더추가 -->
	<insert id="OrderAdd">
		insert into order_master(order_no,payment_status,price,use_point,save_point,total_price,cus_seq,delivery_cus,delivery_addr1,delivery_addr2,delivery_zipcode,delivery_memo,regdate)
		values(0,1,#{price},0,0,#{price},#{cus_seq},#{delivery_cus},#{delivery_addr1},#{delivery_addr2},#{delivery_zipcode},#{delivery_memo},now())																							
	</insert>
	
	<!-- 오더마지막 번호 불러오기 -->
	<select id="LastOrderNo" resultType="int">
		select seq from order_master order by seq desc limit 1
	</select>
	
	<!-- 오더라인 추가 -->
	<insert id="OrderLineAdd">
		insert into order_line(order_no,pcode,qty)
		values(#{order_no},#{pcode},#{qty})
	</insert>
	
	<!-- 제품 재고 할당하기 -->
	<update id="InvtToAllocate">
	update product set
	invt = invt - #{qty} ,
	allocate_invt = allocate_invt + #{qty}
	where pcode = #{pcode}
	</update>
	

	
	<!-- 오더라인조회 -->
	<select id="OrderLineList" resultType="com.myshop.dto.OrderLineDTO">
		select a.*,b.pname,b.price,b.s_img_desc,b.seq as 'p_seq'  from order_line a
		inner join v_product b 
		on(a.pcode = b.pcode)
		where order_no=#{order_no}
	</select>
	
	<!-- 결제완료 -->
	<update id="UpdatePayment">
		update order_master set payment_status = 3 where seq = #{seq}
	</update>
	
	<!-- 배송상태수정 -->
	<update id="UpdateOrder">
		update order_master set order_step = #{order_step} where seq = #{seq}	
	</update>
	
	<!-- 오더검색 -->
	<select id="OrderList_search" resultType="com.myshop.dto.OrderDTO">
		select a.*,b.name as 'payment_val',c.name as 'order_val' from order_master a
		inner join codemaster b
		on (a.payment_status = b.value and b.code='omps')
		inner join codemaster c 
		on (a.order_step = c.value and c.code='omos')
		<if test="search_type == 1">
		<!-- 이름 -->
		where a.delivery_cus like '%${search_text}%'
		</if>
		<if test="search_type == 2">
		<!-- 주문번호 -->
		where a.seq like #{search_text}
		</if>
		order by a.seq desc 
	</select>


	<!-- 주문취소 -->
	<delete id="OrderDel">
	delete from order_master
	where seq = #{seq}
	</delete>

	<delete id="OrderLineDel">
	delete from order_line
	where order_no = #{order_no}
	</delete>
	
	<!-- 제품 재고 할당 취소하기 -->
	<update id="InvtToAllocate_rollback">
	update product set
	invt = invt + #{qty} ,
	allocate_invt = allocate_invt - #{qty}
	where pcode = #{pcode}
	</update>

</mapper>
